Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NAMESTR

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> statement
Rule 3     statements -> statements statement
Rule 4     statement -> IDENTIFIER LBRACKET NUMBER COMMA NUMBER COMMA NUMBER RBRACKET
Rule 5     statement -> SHARP CALL LBRACKET IDENTIFIER COMMA IDENTIFIER RBRACKET AS IDENTIFIER
Rule 6     statement -> SHARP IMPORT LBRACKET IDENTIFIER COMMA NUMBER COMMA IDENTIFIER RBRACKET AS IDENTIFIER
Rule 7     statement -> SHARP WITH LBRACKET IDENTIFIER RBRACKET AS IDENTIFIER
Rule 8     statement -> IDENTIFIER COLON expression SEM
Rule 9     statement -> IDENTIFIER DEFINE_NO expression SEM
Rule 10    statement -> IDENTIFIER DEFINE_ADD expression SEM
Rule 11    statement -> IDENTIFIER DEFINE_IND expression SEM
Rule 12    statement -> expression COMMA tradecom SEM
Rule 13    statement -> CONFIG SEM
Rule 14    expression -> expression LT expression
Rule 15    expression -> expression GT expression
Rule 16    expression -> expression EQ expression
Rule 17    expression -> expression LTE expression
Rule 18    expression -> expression GTE expression
Rule 19    expression -> expression NEQ expression
Rule 20    expression -> expression ADD expression
Rule 21    expression -> expression SUB expression
Rule 22    expression -> expression MUL expression
Rule 23    expression -> expression DIV expression
Rule 24    expression -> expression MOD expression
Rule 25    expression -> expression AND expression
Rule 26    expression -> expression OR expression
Rule 27    expression -> LPAREN expression RPAREN
Rule 28    expression -> NUMBER
Rule 29    expression -> IDENTIFIER
Rule 30    expression -> IDENTIFIER DOT IDENTIFIER
Rule 31    tradecom -> <empty>
Rule 32    tradecom -> TRADE
Rule 33    tradecom -> TRADE LPAREN argslist RPAREN
Rule 34    expression -> IDENTIFIER LPAREN argslist RPAREN
Rule 35    argslist -> <empty>
Rule 36    argslist -> expression
Rule 37    argslist -> argslist COMMA expression

Terminals, with rules where they appear

ADD                  : 20
AND                  : 25
AS                   : 5 6 7
CALL                 : 5
COLON                : 8
COMMA                : 4 4 5 6 6 12 37
CONFIG               : 13
DEFINE_ADD           : 10
DEFINE_IND           : 11
DEFINE_NO            : 9
DIV                  : 23
DOT                  : 30
EQ                   : 16
GT                   : 15
GTE                  : 18
IDENTIFIER           : 4 5 5 5 6 6 6 7 7 8 9 10 11 29 30 30 34
IMPORT               : 6
LBRACKET             : 4 5 6 7
LPAREN               : 27 33 34
LT                   : 14
LTE                  : 17
MOD                  : 24
MUL                  : 22
NAMESTR              : 
NEQ                  : 19
NUMBER               : 4 4 4 6 28
OR                   : 26
RBRACKET             : 4 5 6 7
RPAREN               : 27 33 34
SEM                  : 8 9 10 11 12 13
SHARP                : 5 6 7
SUB                  : 21
TRADE                : 32 33
WITH                 : 7
error                : 

Nonterminals, with rules where they appear

argslist             : 33 34 37
expression           : 8 9 10 11 12 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 36 37
program              : 0
statement            : 2 3
statements           : 1 3
tradecom             : 12

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statement -> . IDENTIFIER LBRACKET NUMBER COMMA NUMBER COMMA NUMBER RBRACKET
    (5) statement -> . SHARP CALL LBRACKET IDENTIFIER COMMA IDENTIFIER RBRACKET AS IDENTIFIER
    (6) statement -> . SHARP IMPORT LBRACKET IDENTIFIER COMMA NUMBER COMMA IDENTIFIER RBRACKET AS IDENTIFIER
    (7) statement -> . SHARP WITH LBRACKET IDENTIFIER RBRACKET AS IDENTIFIER
    (8) statement -> . IDENTIFIER COLON expression SEM
    (9) statement -> . IDENTIFIER DEFINE_NO expression SEM
    (10) statement -> . IDENTIFIER DEFINE_ADD expression SEM
    (11) statement -> . IDENTIFIER DEFINE_IND expression SEM
    (12) statement -> . expression COMMA tradecom SEM
    (13) statement -> . CONFIG SEM
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    IDENTIFIER      shift and go to state 4
    SHARP           shift and go to state 6
    CONFIG          shift and go to state 8
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 7

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .
    (3) statements -> statements . statement
    (4) statement -> . IDENTIFIER LBRACKET NUMBER COMMA NUMBER COMMA NUMBER RBRACKET
    (5) statement -> . SHARP CALL LBRACKET IDENTIFIER COMMA IDENTIFIER RBRACKET AS IDENTIFIER
    (6) statement -> . SHARP IMPORT LBRACKET IDENTIFIER COMMA NUMBER COMMA IDENTIFIER RBRACKET AS IDENTIFIER
    (7) statement -> . SHARP WITH LBRACKET IDENTIFIER RBRACKET AS IDENTIFIER
    (8) statement -> . IDENTIFIER COLON expression SEM
    (9) statement -> . IDENTIFIER DEFINE_NO expression SEM
    (10) statement -> . IDENTIFIER DEFINE_ADD expression SEM
    (11) statement -> . IDENTIFIER DEFINE_IND expression SEM
    (12) statement -> . expression COMMA tradecom SEM
    (13) statement -> . CONFIG SEM
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    $end            reduce using rule 1 (program -> statements .)
    IDENTIFIER      shift and go to state 4
    SHARP           shift and go to state 6
    CONFIG          shift and go to state 8
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5

    statement                      shift and go to state 10
    expression                     shift and go to state 7

state 3

    (2) statements -> statement .

    IDENTIFIER      reduce using rule 2 (statements -> statement .)
    SHARP           reduce using rule 2 (statements -> statement .)
    CONFIG          reduce using rule 2 (statements -> statement .)
    LPAREN          reduce using rule 2 (statements -> statement .)
    NUMBER          reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)


state 4

    (4) statement -> IDENTIFIER . LBRACKET NUMBER COMMA NUMBER COMMA NUMBER RBRACKET
    (8) statement -> IDENTIFIER . COLON expression SEM
    (9) statement -> IDENTIFIER . DEFINE_NO expression SEM
    (10) statement -> IDENTIFIER . DEFINE_ADD expression SEM
    (11) statement -> IDENTIFIER . DEFINE_IND expression SEM
    (29) expression -> IDENTIFIER .
    (30) expression -> IDENTIFIER . DOT IDENTIFIER
    (34) expression -> IDENTIFIER . LPAREN argslist RPAREN

    LBRACKET        shift and go to state 11
    COLON           shift and go to state 12
    DEFINE_NO       shift and go to state 13
    DEFINE_ADD      shift and go to state 14
    DEFINE_IND      shift and go to state 15
    COMMA           reduce using rule 29 (expression -> IDENTIFIER .)
    LT              reduce using rule 29 (expression -> IDENTIFIER .)
    GT              reduce using rule 29 (expression -> IDENTIFIER .)
    EQ              reduce using rule 29 (expression -> IDENTIFIER .)
    LTE             reduce using rule 29 (expression -> IDENTIFIER .)
    GTE             reduce using rule 29 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 29 (expression -> IDENTIFIER .)
    ADD             reduce using rule 29 (expression -> IDENTIFIER .)
    SUB             reduce using rule 29 (expression -> IDENTIFIER .)
    MUL             reduce using rule 29 (expression -> IDENTIFIER .)
    DIV             reduce using rule 29 (expression -> IDENTIFIER .)
    MOD             reduce using rule 29 (expression -> IDENTIFIER .)
    AND             reduce using rule 29 (expression -> IDENTIFIER .)
    OR              reduce using rule 29 (expression -> IDENTIFIER .)
    DOT             shift and go to state 16
    LPAREN          shift and go to state 17


state 5

    (28) expression -> NUMBER .

    COMMA           reduce using rule 28 (expression -> NUMBER .)
    LT              reduce using rule 28 (expression -> NUMBER .)
    GT              reduce using rule 28 (expression -> NUMBER .)
    EQ              reduce using rule 28 (expression -> NUMBER .)
    LTE             reduce using rule 28 (expression -> NUMBER .)
    GTE             reduce using rule 28 (expression -> NUMBER .)
    NEQ             reduce using rule 28 (expression -> NUMBER .)
    ADD             reduce using rule 28 (expression -> NUMBER .)
    SUB             reduce using rule 28 (expression -> NUMBER .)
    MUL             reduce using rule 28 (expression -> NUMBER .)
    DIV             reduce using rule 28 (expression -> NUMBER .)
    MOD             reduce using rule 28 (expression -> NUMBER .)
    AND             reduce using rule 28 (expression -> NUMBER .)
    OR              reduce using rule 28 (expression -> NUMBER .)
    RPAREN          reduce using rule 28 (expression -> NUMBER .)
    SEM             reduce using rule 28 (expression -> NUMBER .)


state 6

    (5) statement -> SHARP . CALL LBRACKET IDENTIFIER COMMA IDENTIFIER RBRACKET AS IDENTIFIER
    (6) statement -> SHARP . IMPORT LBRACKET IDENTIFIER COMMA NUMBER COMMA IDENTIFIER RBRACKET AS IDENTIFIER
    (7) statement -> SHARP . WITH LBRACKET IDENTIFIER RBRACKET AS IDENTIFIER

    CALL            shift and go to state 18
    IMPORT          shift and go to state 19
    WITH            shift and go to state 20


state 7

    (12) statement -> expression . COMMA tradecom SEM
    (14) expression -> expression . LT expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . LTE expression
    (18) expression -> expression . GTE expression
    (19) expression -> expression . NEQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . MOD expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression

    COMMA           shift and go to state 21
    LT              shift and go to state 22
    GT              shift and go to state 23
    EQ              shift and go to state 24
    LTE             shift and go to state 25
    GTE             shift and go to state 26
    NEQ             shift and go to state 27
    ADD             shift and go to state 28
    SUB             shift and go to state 29
    MUL             shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34


state 8

    (13) statement -> CONFIG . SEM

    SEM             shift and go to state 35


state 9

    (27) expression -> LPAREN . expression RPAREN
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 37

    expression                     shift and go to state 36

state 10

    (3) statements -> statements statement .

    IDENTIFIER      reduce using rule 3 (statements -> statements statement .)
    SHARP           reduce using rule 3 (statements -> statements statement .)
    CONFIG          reduce using rule 3 (statements -> statements statement .)
    LPAREN          reduce using rule 3 (statements -> statements statement .)
    NUMBER          reduce using rule 3 (statements -> statements statement .)
    $end            reduce using rule 3 (statements -> statements statement .)


state 11

    (4) statement -> IDENTIFIER LBRACKET . NUMBER COMMA NUMBER COMMA NUMBER RBRACKET

    NUMBER          shift and go to state 38


state 12

    (8) statement -> IDENTIFIER COLON . expression SEM
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 37

    expression                     shift and go to state 39

state 13

    (9) statement -> IDENTIFIER DEFINE_NO . expression SEM
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 37

    expression                     shift and go to state 40

state 14

    (10) statement -> IDENTIFIER DEFINE_ADD . expression SEM
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 37

    expression                     shift and go to state 41

state 15

    (11) statement -> IDENTIFIER DEFINE_IND . expression SEM
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 37

    expression                     shift and go to state 42

state 16

    (30) expression -> IDENTIFIER DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 43


state 17

    (34) expression -> IDENTIFIER LPAREN . argslist RPAREN
    (35) argslist -> .
    (36) argslist -> . expression
    (37) argslist -> . argslist COMMA expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    RPAREN          reduce using rule 35 (argslist -> .)
    COMMA           reduce using rule 35 (argslist -> .)
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 37

    argslist                       shift and go to state 44
    expression                     shift and go to state 45

state 18

    (5) statement -> SHARP CALL . LBRACKET IDENTIFIER COMMA IDENTIFIER RBRACKET AS IDENTIFIER

    LBRACKET        shift and go to state 46


state 19

    (6) statement -> SHARP IMPORT . LBRACKET IDENTIFIER COMMA NUMBER COMMA IDENTIFIER RBRACKET AS IDENTIFIER

    LBRACKET        shift and go to state 47


state 20

    (7) statement -> SHARP WITH . LBRACKET IDENTIFIER RBRACKET AS IDENTIFIER

    LBRACKET        shift and go to state 48


state 21

    (12) statement -> expression COMMA . tradecom SEM
    (31) tradecom -> .
    (32) tradecom -> . TRADE
    (33) tradecom -> . TRADE LPAREN argslist RPAREN

    SEM             reduce using rule 31 (tradecom -> .)
    TRADE           shift and go to state 50

    tradecom                       shift and go to state 49

state 22

    (14) expression -> expression LT . expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 37

    expression                     shift and go to state 51

state 23

    (15) expression -> expression GT . expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 37

    expression                     shift and go to state 52

state 24

    (16) expression -> expression EQ . expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 37

    expression                     shift and go to state 53

state 25

    (17) expression -> expression LTE . expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 37

    expression                     shift and go to state 54

state 26

    (18) expression -> expression GTE . expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 37

    expression                     shift and go to state 55

state 27

    (19) expression -> expression NEQ . expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 37

    expression                     shift and go to state 56

state 28

    (20) expression -> expression ADD . expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 37

    expression                     shift and go to state 57

state 29

    (21) expression -> expression SUB . expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 37

    expression                     shift and go to state 58

state 30

    (22) expression -> expression MUL . expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 37

    expression                     shift and go to state 59

state 31

    (23) expression -> expression DIV . expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 37

    expression                     shift and go to state 60

state 32

    (24) expression -> expression MOD . expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 37

    expression                     shift and go to state 61

state 33

    (25) expression -> expression AND . expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 37

    expression                     shift and go to state 62

state 34

    (26) expression -> expression OR . expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 37

    expression                     shift and go to state 63

state 35

    (13) statement -> CONFIG SEM .

    IDENTIFIER      reduce using rule 13 (statement -> CONFIG SEM .)
    SHARP           reduce using rule 13 (statement -> CONFIG SEM .)
    CONFIG          reduce using rule 13 (statement -> CONFIG SEM .)
    LPAREN          reduce using rule 13 (statement -> CONFIG SEM .)
    NUMBER          reduce using rule 13 (statement -> CONFIG SEM .)
    $end            reduce using rule 13 (statement -> CONFIG SEM .)


state 36

    (27) expression -> LPAREN expression . RPAREN
    (14) expression -> expression . LT expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . LTE expression
    (18) expression -> expression . GTE expression
    (19) expression -> expression . NEQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . MOD expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression

    RPAREN          shift and go to state 64
    LT              shift and go to state 22
    GT              shift and go to state 23
    EQ              shift and go to state 24
    LTE             shift and go to state 25
    GTE             shift and go to state 26
    NEQ             shift and go to state 27
    ADD             shift and go to state 28
    SUB             shift and go to state 29
    MUL             shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34


state 37

    (29) expression -> IDENTIFIER .
    (30) expression -> IDENTIFIER . DOT IDENTIFIER
    (34) expression -> IDENTIFIER . LPAREN argslist RPAREN

    RPAREN          reduce using rule 29 (expression -> IDENTIFIER .)
    LT              reduce using rule 29 (expression -> IDENTIFIER .)
    GT              reduce using rule 29 (expression -> IDENTIFIER .)
    EQ              reduce using rule 29 (expression -> IDENTIFIER .)
    LTE             reduce using rule 29 (expression -> IDENTIFIER .)
    GTE             reduce using rule 29 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 29 (expression -> IDENTIFIER .)
    ADD             reduce using rule 29 (expression -> IDENTIFIER .)
    SUB             reduce using rule 29 (expression -> IDENTIFIER .)
    MUL             reduce using rule 29 (expression -> IDENTIFIER .)
    DIV             reduce using rule 29 (expression -> IDENTIFIER .)
    MOD             reduce using rule 29 (expression -> IDENTIFIER .)
    AND             reduce using rule 29 (expression -> IDENTIFIER .)
    OR              reduce using rule 29 (expression -> IDENTIFIER .)
    SEM             reduce using rule 29 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 29 (expression -> IDENTIFIER .)
    DOT             shift and go to state 16
    LPAREN          shift and go to state 17


state 38

    (4) statement -> IDENTIFIER LBRACKET NUMBER . COMMA NUMBER COMMA NUMBER RBRACKET

    COMMA           shift and go to state 65


state 39

    (8) statement -> IDENTIFIER COLON expression . SEM
    (14) expression -> expression . LT expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . LTE expression
    (18) expression -> expression . GTE expression
    (19) expression -> expression . NEQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . MOD expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression

    SEM             shift and go to state 66
    LT              shift and go to state 22
    GT              shift and go to state 23
    EQ              shift and go to state 24
    LTE             shift and go to state 25
    GTE             shift and go to state 26
    NEQ             shift and go to state 27
    ADD             shift and go to state 28
    SUB             shift and go to state 29
    MUL             shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34


state 40

    (9) statement -> IDENTIFIER DEFINE_NO expression . SEM
    (14) expression -> expression . LT expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . LTE expression
    (18) expression -> expression . GTE expression
    (19) expression -> expression . NEQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . MOD expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression

    SEM             shift and go to state 67
    LT              shift and go to state 22
    GT              shift and go to state 23
    EQ              shift and go to state 24
    LTE             shift and go to state 25
    GTE             shift and go to state 26
    NEQ             shift and go to state 27
    ADD             shift and go to state 28
    SUB             shift and go to state 29
    MUL             shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34


state 41

    (10) statement -> IDENTIFIER DEFINE_ADD expression . SEM
    (14) expression -> expression . LT expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . LTE expression
    (18) expression -> expression . GTE expression
    (19) expression -> expression . NEQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . MOD expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression

    SEM             shift and go to state 68
    LT              shift and go to state 22
    GT              shift and go to state 23
    EQ              shift and go to state 24
    LTE             shift and go to state 25
    GTE             shift and go to state 26
    NEQ             shift and go to state 27
    ADD             shift and go to state 28
    SUB             shift and go to state 29
    MUL             shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34


state 42

    (11) statement -> IDENTIFIER DEFINE_IND expression . SEM
    (14) expression -> expression . LT expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . LTE expression
    (18) expression -> expression . GTE expression
    (19) expression -> expression . NEQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . MOD expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression

    SEM             shift and go to state 69
    LT              shift and go to state 22
    GT              shift and go to state 23
    EQ              shift and go to state 24
    LTE             shift and go to state 25
    GTE             shift and go to state 26
    NEQ             shift and go to state 27
    ADD             shift and go to state 28
    SUB             shift and go to state 29
    MUL             shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34


state 43

    (30) expression -> IDENTIFIER DOT IDENTIFIER .

    COMMA           reduce using rule 30 (expression -> IDENTIFIER DOT IDENTIFIER .)
    LT              reduce using rule 30 (expression -> IDENTIFIER DOT IDENTIFIER .)
    GT              reduce using rule 30 (expression -> IDENTIFIER DOT IDENTIFIER .)
    EQ              reduce using rule 30 (expression -> IDENTIFIER DOT IDENTIFIER .)
    LTE             reduce using rule 30 (expression -> IDENTIFIER DOT IDENTIFIER .)
    GTE             reduce using rule 30 (expression -> IDENTIFIER DOT IDENTIFIER .)
    NEQ             reduce using rule 30 (expression -> IDENTIFIER DOT IDENTIFIER .)
    ADD             reduce using rule 30 (expression -> IDENTIFIER DOT IDENTIFIER .)
    SUB             reduce using rule 30 (expression -> IDENTIFIER DOT IDENTIFIER .)
    MUL             reduce using rule 30 (expression -> IDENTIFIER DOT IDENTIFIER .)
    DIV             reduce using rule 30 (expression -> IDENTIFIER DOT IDENTIFIER .)
    MOD             reduce using rule 30 (expression -> IDENTIFIER DOT IDENTIFIER .)
    AND             reduce using rule 30 (expression -> IDENTIFIER DOT IDENTIFIER .)
    OR              reduce using rule 30 (expression -> IDENTIFIER DOT IDENTIFIER .)
    RPAREN          reduce using rule 30 (expression -> IDENTIFIER DOT IDENTIFIER .)
    SEM             reduce using rule 30 (expression -> IDENTIFIER DOT IDENTIFIER .)


state 44

    (34) expression -> IDENTIFIER LPAREN argslist . RPAREN
    (37) argslist -> argslist . COMMA expression

    RPAREN          shift and go to state 70
    COMMA           shift and go to state 71


state 45

    (36) argslist -> expression .
    (14) expression -> expression . LT expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . LTE expression
    (18) expression -> expression . GTE expression
    (19) expression -> expression . NEQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . MOD expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression

    RPAREN          reduce using rule 36 (argslist -> expression .)
    COMMA           reduce using rule 36 (argslist -> expression .)
    LT              shift and go to state 22
    GT              shift and go to state 23
    EQ              shift and go to state 24
    LTE             shift and go to state 25
    GTE             shift and go to state 26
    NEQ             shift and go to state 27
    ADD             shift and go to state 28
    SUB             shift and go to state 29
    MUL             shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34


state 46

    (5) statement -> SHARP CALL LBRACKET . IDENTIFIER COMMA IDENTIFIER RBRACKET AS IDENTIFIER

    IDENTIFIER      shift and go to state 72


state 47

    (6) statement -> SHARP IMPORT LBRACKET . IDENTIFIER COMMA NUMBER COMMA IDENTIFIER RBRACKET AS IDENTIFIER

    IDENTIFIER      shift and go to state 73


state 48

    (7) statement -> SHARP WITH LBRACKET . IDENTIFIER RBRACKET AS IDENTIFIER

    IDENTIFIER      shift and go to state 74


state 49

    (12) statement -> expression COMMA tradecom . SEM

    SEM             shift and go to state 75


state 50

    (32) tradecom -> TRADE .
    (33) tradecom -> TRADE . LPAREN argslist RPAREN

    SEM             reduce using rule 32 (tradecom -> TRADE .)
    LPAREN          shift and go to state 76


state 51

    (14) expression -> expression LT expression .
    (14) expression -> expression . LT expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . LTE expression
    (18) expression -> expression . GTE expression
    (19) expression -> expression . NEQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . MOD expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression

    COMMA           reduce using rule 14 (expression -> expression LT expression .)
    LT              reduce using rule 14 (expression -> expression LT expression .)
    GT              reduce using rule 14 (expression -> expression LT expression .)
    EQ              reduce using rule 14 (expression -> expression LT expression .)
    LTE             reduce using rule 14 (expression -> expression LT expression .)
    GTE             reduce using rule 14 (expression -> expression LT expression .)
    NEQ             reduce using rule 14 (expression -> expression LT expression .)
    AND             reduce using rule 14 (expression -> expression LT expression .)
    OR              reduce using rule 14 (expression -> expression LT expression .)
    RPAREN          reduce using rule 14 (expression -> expression LT expression .)
    SEM             reduce using rule 14 (expression -> expression LT expression .)
    ADD             shift and go to state 28
    SUB             shift and go to state 29
    MUL             shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32

  ! ADD             [ reduce using rule 14 (expression -> expression LT expression .) ]
  ! SUB             [ reduce using rule 14 (expression -> expression LT expression .) ]
  ! MUL             [ reduce using rule 14 (expression -> expression LT expression .) ]
  ! DIV             [ reduce using rule 14 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 14 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 22 ]
  ! GT              [ shift and go to state 23 ]
  ! EQ              [ shift and go to state 24 ]
  ! LTE             [ shift and go to state 25 ]
  ! GTE             [ shift and go to state 26 ]
  ! NEQ             [ shift and go to state 27 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 52

    (15) expression -> expression GT expression .
    (14) expression -> expression . LT expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . LTE expression
    (18) expression -> expression . GTE expression
    (19) expression -> expression . NEQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . MOD expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression

    COMMA           reduce using rule 15 (expression -> expression GT expression .)
    LT              reduce using rule 15 (expression -> expression GT expression .)
    GT              reduce using rule 15 (expression -> expression GT expression .)
    EQ              reduce using rule 15 (expression -> expression GT expression .)
    LTE             reduce using rule 15 (expression -> expression GT expression .)
    GTE             reduce using rule 15 (expression -> expression GT expression .)
    NEQ             reduce using rule 15 (expression -> expression GT expression .)
    AND             reduce using rule 15 (expression -> expression GT expression .)
    OR              reduce using rule 15 (expression -> expression GT expression .)
    RPAREN          reduce using rule 15 (expression -> expression GT expression .)
    SEM             reduce using rule 15 (expression -> expression GT expression .)
    ADD             shift and go to state 28
    SUB             shift and go to state 29
    MUL             shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32

  ! ADD             [ reduce using rule 15 (expression -> expression GT expression .) ]
  ! SUB             [ reduce using rule 15 (expression -> expression GT expression .) ]
  ! MUL             [ reduce using rule 15 (expression -> expression GT expression .) ]
  ! DIV             [ reduce using rule 15 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 15 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 22 ]
  ! GT              [ shift and go to state 23 ]
  ! EQ              [ shift and go to state 24 ]
  ! LTE             [ shift and go to state 25 ]
  ! GTE             [ shift and go to state 26 ]
  ! NEQ             [ shift and go to state 27 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 53

    (16) expression -> expression EQ expression .
    (14) expression -> expression . LT expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . LTE expression
    (18) expression -> expression . GTE expression
    (19) expression -> expression . NEQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . MOD expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression

    COMMA           reduce using rule 16 (expression -> expression EQ expression .)
    LT              reduce using rule 16 (expression -> expression EQ expression .)
    GT              reduce using rule 16 (expression -> expression EQ expression .)
    EQ              reduce using rule 16 (expression -> expression EQ expression .)
    LTE             reduce using rule 16 (expression -> expression EQ expression .)
    GTE             reduce using rule 16 (expression -> expression EQ expression .)
    NEQ             reduce using rule 16 (expression -> expression EQ expression .)
    AND             reduce using rule 16 (expression -> expression EQ expression .)
    OR              reduce using rule 16 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 16 (expression -> expression EQ expression .)
    SEM             reduce using rule 16 (expression -> expression EQ expression .)
    ADD             shift and go to state 28
    SUB             shift and go to state 29
    MUL             shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32

  ! ADD             [ reduce using rule 16 (expression -> expression EQ expression .) ]
  ! SUB             [ reduce using rule 16 (expression -> expression EQ expression .) ]
  ! MUL             [ reduce using rule 16 (expression -> expression EQ expression .) ]
  ! DIV             [ reduce using rule 16 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 16 (expression -> expression EQ expression .) ]
  ! LT              [ shift and go to state 22 ]
  ! GT              [ shift and go to state 23 ]
  ! EQ              [ shift and go to state 24 ]
  ! LTE             [ shift and go to state 25 ]
  ! GTE             [ shift and go to state 26 ]
  ! NEQ             [ shift and go to state 27 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 54

    (17) expression -> expression LTE expression .
    (14) expression -> expression . LT expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . LTE expression
    (18) expression -> expression . GTE expression
    (19) expression -> expression . NEQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . MOD expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression

    COMMA           reduce using rule 17 (expression -> expression LTE expression .)
    LT              reduce using rule 17 (expression -> expression LTE expression .)
    GT              reduce using rule 17 (expression -> expression LTE expression .)
    EQ              reduce using rule 17 (expression -> expression LTE expression .)
    LTE             reduce using rule 17 (expression -> expression LTE expression .)
    GTE             reduce using rule 17 (expression -> expression LTE expression .)
    NEQ             reduce using rule 17 (expression -> expression LTE expression .)
    AND             reduce using rule 17 (expression -> expression LTE expression .)
    OR              reduce using rule 17 (expression -> expression LTE expression .)
    RPAREN          reduce using rule 17 (expression -> expression LTE expression .)
    SEM             reduce using rule 17 (expression -> expression LTE expression .)
    ADD             shift and go to state 28
    SUB             shift and go to state 29
    MUL             shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32

  ! ADD             [ reduce using rule 17 (expression -> expression LTE expression .) ]
  ! SUB             [ reduce using rule 17 (expression -> expression LTE expression .) ]
  ! MUL             [ reduce using rule 17 (expression -> expression LTE expression .) ]
  ! DIV             [ reduce using rule 17 (expression -> expression LTE expression .) ]
  ! MOD             [ reduce using rule 17 (expression -> expression LTE expression .) ]
  ! LT              [ shift and go to state 22 ]
  ! GT              [ shift and go to state 23 ]
  ! EQ              [ shift and go to state 24 ]
  ! LTE             [ shift and go to state 25 ]
  ! GTE             [ shift and go to state 26 ]
  ! NEQ             [ shift and go to state 27 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 55

    (18) expression -> expression GTE expression .
    (14) expression -> expression . LT expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . LTE expression
    (18) expression -> expression . GTE expression
    (19) expression -> expression . NEQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . MOD expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression

    COMMA           reduce using rule 18 (expression -> expression GTE expression .)
    LT              reduce using rule 18 (expression -> expression GTE expression .)
    GT              reduce using rule 18 (expression -> expression GTE expression .)
    EQ              reduce using rule 18 (expression -> expression GTE expression .)
    LTE             reduce using rule 18 (expression -> expression GTE expression .)
    GTE             reduce using rule 18 (expression -> expression GTE expression .)
    NEQ             reduce using rule 18 (expression -> expression GTE expression .)
    AND             reduce using rule 18 (expression -> expression GTE expression .)
    OR              reduce using rule 18 (expression -> expression GTE expression .)
    RPAREN          reduce using rule 18 (expression -> expression GTE expression .)
    SEM             reduce using rule 18 (expression -> expression GTE expression .)
    ADD             shift and go to state 28
    SUB             shift and go to state 29
    MUL             shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32

  ! ADD             [ reduce using rule 18 (expression -> expression GTE expression .) ]
  ! SUB             [ reduce using rule 18 (expression -> expression GTE expression .) ]
  ! MUL             [ reduce using rule 18 (expression -> expression GTE expression .) ]
  ! DIV             [ reduce using rule 18 (expression -> expression GTE expression .) ]
  ! MOD             [ reduce using rule 18 (expression -> expression GTE expression .) ]
  ! LT              [ shift and go to state 22 ]
  ! GT              [ shift and go to state 23 ]
  ! EQ              [ shift and go to state 24 ]
  ! LTE             [ shift and go to state 25 ]
  ! GTE             [ shift and go to state 26 ]
  ! NEQ             [ shift and go to state 27 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 56

    (19) expression -> expression NEQ expression .
    (14) expression -> expression . LT expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . LTE expression
    (18) expression -> expression . GTE expression
    (19) expression -> expression . NEQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . MOD expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression

    COMMA           reduce using rule 19 (expression -> expression NEQ expression .)
    LT              reduce using rule 19 (expression -> expression NEQ expression .)
    GT              reduce using rule 19 (expression -> expression NEQ expression .)
    EQ              reduce using rule 19 (expression -> expression NEQ expression .)
    LTE             reduce using rule 19 (expression -> expression NEQ expression .)
    GTE             reduce using rule 19 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 19 (expression -> expression NEQ expression .)
    AND             reduce using rule 19 (expression -> expression NEQ expression .)
    OR              reduce using rule 19 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 19 (expression -> expression NEQ expression .)
    SEM             reduce using rule 19 (expression -> expression NEQ expression .)
    ADD             shift and go to state 28
    SUB             shift and go to state 29
    MUL             shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32

  ! ADD             [ reduce using rule 19 (expression -> expression NEQ expression .) ]
  ! SUB             [ reduce using rule 19 (expression -> expression NEQ expression .) ]
  ! MUL             [ reduce using rule 19 (expression -> expression NEQ expression .) ]
  ! DIV             [ reduce using rule 19 (expression -> expression NEQ expression .) ]
  ! MOD             [ reduce using rule 19 (expression -> expression NEQ expression .) ]
  ! LT              [ shift and go to state 22 ]
  ! GT              [ shift and go to state 23 ]
  ! EQ              [ shift and go to state 24 ]
  ! LTE             [ shift and go to state 25 ]
  ! GTE             [ shift and go to state 26 ]
  ! NEQ             [ shift and go to state 27 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 57

    (20) expression -> expression ADD expression .
    (14) expression -> expression . LT expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . LTE expression
    (18) expression -> expression . GTE expression
    (19) expression -> expression . NEQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . MOD expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression

    COMMA           reduce using rule 20 (expression -> expression ADD expression .)
    LT              reduce using rule 20 (expression -> expression ADD expression .)
    GT              reduce using rule 20 (expression -> expression ADD expression .)
    EQ              reduce using rule 20 (expression -> expression ADD expression .)
    LTE             reduce using rule 20 (expression -> expression ADD expression .)
    GTE             reduce using rule 20 (expression -> expression ADD expression .)
    NEQ             reduce using rule 20 (expression -> expression ADD expression .)
    ADD             reduce using rule 20 (expression -> expression ADD expression .)
    SUB             reduce using rule 20 (expression -> expression ADD expression .)
    AND             reduce using rule 20 (expression -> expression ADD expression .)
    OR              reduce using rule 20 (expression -> expression ADD expression .)
    RPAREN          reduce using rule 20 (expression -> expression ADD expression .)
    SEM             reduce using rule 20 (expression -> expression ADD expression .)
    MUL             shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32

  ! MUL             [ reduce using rule 20 (expression -> expression ADD expression .) ]
  ! DIV             [ reduce using rule 20 (expression -> expression ADD expression .) ]
  ! MOD             [ reduce using rule 20 (expression -> expression ADD expression .) ]
  ! LT              [ shift and go to state 22 ]
  ! GT              [ shift and go to state 23 ]
  ! EQ              [ shift and go to state 24 ]
  ! LTE             [ shift and go to state 25 ]
  ! GTE             [ shift and go to state 26 ]
  ! NEQ             [ shift and go to state 27 ]
  ! ADD             [ shift and go to state 28 ]
  ! SUB             [ shift and go to state 29 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 58

    (21) expression -> expression SUB expression .
    (14) expression -> expression . LT expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . LTE expression
    (18) expression -> expression . GTE expression
    (19) expression -> expression . NEQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . MOD expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression

    COMMA           reduce using rule 21 (expression -> expression SUB expression .)
    LT              reduce using rule 21 (expression -> expression SUB expression .)
    GT              reduce using rule 21 (expression -> expression SUB expression .)
    EQ              reduce using rule 21 (expression -> expression SUB expression .)
    LTE             reduce using rule 21 (expression -> expression SUB expression .)
    GTE             reduce using rule 21 (expression -> expression SUB expression .)
    NEQ             reduce using rule 21 (expression -> expression SUB expression .)
    ADD             reduce using rule 21 (expression -> expression SUB expression .)
    SUB             reduce using rule 21 (expression -> expression SUB expression .)
    AND             reduce using rule 21 (expression -> expression SUB expression .)
    OR              reduce using rule 21 (expression -> expression SUB expression .)
    RPAREN          reduce using rule 21 (expression -> expression SUB expression .)
    SEM             reduce using rule 21 (expression -> expression SUB expression .)
    MUL             shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32

  ! MUL             [ reduce using rule 21 (expression -> expression SUB expression .) ]
  ! DIV             [ reduce using rule 21 (expression -> expression SUB expression .) ]
  ! MOD             [ reduce using rule 21 (expression -> expression SUB expression .) ]
  ! LT              [ shift and go to state 22 ]
  ! GT              [ shift and go to state 23 ]
  ! EQ              [ shift and go to state 24 ]
  ! LTE             [ shift and go to state 25 ]
  ! GTE             [ shift and go to state 26 ]
  ! NEQ             [ shift and go to state 27 ]
  ! ADD             [ shift and go to state 28 ]
  ! SUB             [ shift and go to state 29 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 59

    (22) expression -> expression MUL expression .
    (14) expression -> expression . LT expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . LTE expression
    (18) expression -> expression . GTE expression
    (19) expression -> expression . NEQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . MOD expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression

    COMMA           reduce using rule 22 (expression -> expression MUL expression .)
    LT              reduce using rule 22 (expression -> expression MUL expression .)
    GT              reduce using rule 22 (expression -> expression MUL expression .)
    EQ              reduce using rule 22 (expression -> expression MUL expression .)
    LTE             reduce using rule 22 (expression -> expression MUL expression .)
    GTE             reduce using rule 22 (expression -> expression MUL expression .)
    NEQ             reduce using rule 22 (expression -> expression MUL expression .)
    ADD             reduce using rule 22 (expression -> expression MUL expression .)
    SUB             reduce using rule 22 (expression -> expression MUL expression .)
    MUL             reduce using rule 22 (expression -> expression MUL expression .)
    DIV             reduce using rule 22 (expression -> expression MUL expression .)
    MOD             reduce using rule 22 (expression -> expression MUL expression .)
    AND             reduce using rule 22 (expression -> expression MUL expression .)
    OR              reduce using rule 22 (expression -> expression MUL expression .)
    RPAREN          reduce using rule 22 (expression -> expression MUL expression .)
    SEM             reduce using rule 22 (expression -> expression MUL expression .)

  ! LT              [ shift and go to state 22 ]
  ! GT              [ shift and go to state 23 ]
  ! EQ              [ shift and go to state 24 ]
  ! LTE             [ shift and go to state 25 ]
  ! GTE             [ shift and go to state 26 ]
  ! NEQ             [ shift and go to state 27 ]
  ! ADD             [ shift and go to state 28 ]
  ! SUB             [ shift and go to state 29 ]
  ! MUL             [ shift and go to state 30 ]
  ! DIV             [ shift and go to state 31 ]
  ! MOD             [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 60

    (23) expression -> expression DIV expression .
    (14) expression -> expression . LT expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . LTE expression
    (18) expression -> expression . GTE expression
    (19) expression -> expression . NEQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . MOD expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression

    COMMA           reduce using rule 23 (expression -> expression DIV expression .)
    LT              reduce using rule 23 (expression -> expression DIV expression .)
    GT              reduce using rule 23 (expression -> expression DIV expression .)
    EQ              reduce using rule 23 (expression -> expression DIV expression .)
    LTE             reduce using rule 23 (expression -> expression DIV expression .)
    GTE             reduce using rule 23 (expression -> expression DIV expression .)
    NEQ             reduce using rule 23 (expression -> expression DIV expression .)
    ADD             reduce using rule 23 (expression -> expression DIV expression .)
    SUB             reduce using rule 23 (expression -> expression DIV expression .)
    MUL             reduce using rule 23 (expression -> expression DIV expression .)
    DIV             reduce using rule 23 (expression -> expression DIV expression .)
    MOD             reduce using rule 23 (expression -> expression DIV expression .)
    AND             reduce using rule 23 (expression -> expression DIV expression .)
    OR              reduce using rule 23 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 23 (expression -> expression DIV expression .)
    SEM             reduce using rule 23 (expression -> expression DIV expression .)

  ! LT              [ shift and go to state 22 ]
  ! GT              [ shift and go to state 23 ]
  ! EQ              [ shift and go to state 24 ]
  ! LTE             [ shift and go to state 25 ]
  ! GTE             [ shift and go to state 26 ]
  ! NEQ             [ shift and go to state 27 ]
  ! ADD             [ shift and go to state 28 ]
  ! SUB             [ shift and go to state 29 ]
  ! MUL             [ shift and go to state 30 ]
  ! DIV             [ shift and go to state 31 ]
  ! MOD             [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 61

    (24) expression -> expression MOD expression .
    (14) expression -> expression . LT expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . LTE expression
    (18) expression -> expression . GTE expression
    (19) expression -> expression . NEQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . MOD expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression

    COMMA           reduce using rule 24 (expression -> expression MOD expression .)
    LT              reduce using rule 24 (expression -> expression MOD expression .)
    GT              reduce using rule 24 (expression -> expression MOD expression .)
    EQ              reduce using rule 24 (expression -> expression MOD expression .)
    LTE             reduce using rule 24 (expression -> expression MOD expression .)
    GTE             reduce using rule 24 (expression -> expression MOD expression .)
    NEQ             reduce using rule 24 (expression -> expression MOD expression .)
    ADD             reduce using rule 24 (expression -> expression MOD expression .)
    SUB             reduce using rule 24 (expression -> expression MOD expression .)
    MUL             reduce using rule 24 (expression -> expression MOD expression .)
    DIV             reduce using rule 24 (expression -> expression MOD expression .)
    MOD             reduce using rule 24 (expression -> expression MOD expression .)
    AND             reduce using rule 24 (expression -> expression MOD expression .)
    OR              reduce using rule 24 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 24 (expression -> expression MOD expression .)
    SEM             reduce using rule 24 (expression -> expression MOD expression .)

  ! LT              [ shift and go to state 22 ]
  ! GT              [ shift and go to state 23 ]
  ! EQ              [ shift and go to state 24 ]
  ! LTE             [ shift and go to state 25 ]
  ! GTE             [ shift and go to state 26 ]
  ! NEQ             [ shift and go to state 27 ]
  ! ADD             [ shift and go to state 28 ]
  ! SUB             [ shift and go to state 29 ]
  ! MUL             [ shift and go to state 30 ]
  ! DIV             [ shift and go to state 31 ]
  ! MOD             [ shift and go to state 32 ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 62

    (25) expression -> expression AND expression .
    (14) expression -> expression . LT expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . LTE expression
    (18) expression -> expression . GTE expression
    (19) expression -> expression . NEQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . MOD expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression

    COMMA           reduce using rule 25 (expression -> expression AND expression .)
    AND             reduce using rule 25 (expression -> expression AND expression .)
    OR              reduce using rule 25 (expression -> expression AND expression .)
    RPAREN          reduce using rule 25 (expression -> expression AND expression .)
    SEM             reduce using rule 25 (expression -> expression AND expression .)
    LT              shift and go to state 22
    GT              shift and go to state 23
    EQ              shift and go to state 24
    LTE             shift and go to state 25
    GTE             shift and go to state 26
    NEQ             shift and go to state 27
    ADD             shift and go to state 28
    SUB             shift and go to state 29
    MUL             shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32

  ! LT              [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! LTE             [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! GTE             [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! ADD             [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! SUB             [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! MUL             [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! DIV             [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 63

    (26) expression -> expression OR expression .
    (14) expression -> expression . LT expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . LTE expression
    (18) expression -> expression . GTE expression
    (19) expression -> expression . NEQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . MOD expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression

    COMMA           reduce using rule 26 (expression -> expression OR expression .)
    AND             reduce using rule 26 (expression -> expression OR expression .)
    OR              reduce using rule 26 (expression -> expression OR expression .)
    RPAREN          reduce using rule 26 (expression -> expression OR expression .)
    SEM             reduce using rule 26 (expression -> expression OR expression .)
    LT              shift and go to state 22
    GT              shift and go to state 23
    EQ              shift and go to state 24
    LTE             shift and go to state 25
    GTE             shift and go to state 26
    NEQ             shift and go to state 27
    ADD             shift and go to state 28
    SUB             shift and go to state 29
    MUL             shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32

  ! LT              [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! LTE             [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! GTE             [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! ADD             [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! SUB             [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! MUL             [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! DIV             [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! AND             [ shift and go to state 33 ]
  ! OR              [ shift and go to state 34 ]


state 64

    (27) expression -> LPAREN expression RPAREN .

    COMMA           reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    LTE             reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    GTE             reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    ADD             reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    SUB             reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    MUL             reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    SEM             reduce using rule 27 (expression -> LPAREN expression RPAREN .)


state 65

    (4) statement -> IDENTIFIER LBRACKET NUMBER COMMA . NUMBER COMMA NUMBER RBRACKET

    NUMBER          shift and go to state 77


state 66

    (8) statement -> IDENTIFIER COLON expression SEM .

    IDENTIFIER      reduce using rule 8 (statement -> IDENTIFIER COLON expression SEM .)
    SHARP           reduce using rule 8 (statement -> IDENTIFIER COLON expression SEM .)
    CONFIG          reduce using rule 8 (statement -> IDENTIFIER COLON expression SEM .)
    LPAREN          reduce using rule 8 (statement -> IDENTIFIER COLON expression SEM .)
    NUMBER          reduce using rule 8 (statement -> IDENTIFIER COLON expression SEM .)
    $end            reduce using rule 8 (statement -> IDENTIFIER COLON expression SEM .)


state 67

    (9) statement -> IDENTIFIER DEFINE_NO expression SEM .

    IDENTIFIER      reduce using rule 9 (statement -> IDENTIFIER DEFINE_NO expression SEM .)
    SHARP           reduce using rule 9 (statement -> IDENTIFIER DEFINE_NO expression SEM .)
    CONFIG          reduce using rule 9 (statement -> IDENTIFIER DEFINE_NO expression SEM .)
    LPAREN          reduce using rule 9 (statement -> IDENTIFIER DEFINE_NO expression SEM .)
    NUMBER          reduce using rule 9 (statement -> IDENTIFIER DEFINE_NO expression SEM .)
    $end            reduce using rule 9 (statement -> IDENTIFIER DEFINE_NO expression SEM .)


state 68

    (10) statement -> IDENTIFIER DEFINE_ADD expression SEM .

    IDENTIFIER      reduce using rule 10 (statement -> IDENTIFIER DEFINE_ADD expression SEM .)
    SHARP           reduce using rule 10 (statement -> IDENTIFIER DEFINE_ADD expression SEM .)
    CONFIG          reduce using rule 10 (statement -> IDENTIFIER DEFINE_ADD expression SEM .)
    LPAREN          reduce using rule 10 (statement -> IDENTIFIER DEFINE_ADD expression SEM .)
    NUMBER          reduce using rule 10 (statement -> IDENTIFIER DEFINE_ADD expression SEM .)
    $end            reduce using rule 10 (statement -> IDENTIFIER DEFINE_ADD expression SEM .)


state 69

    (11) statement -> IDENTIFIER DEFINE_IND expression SEM .

    IDENTIFIER      reduce using rule 11 (statement -> IDENTIFIER DEFINE_IND expression SEM .)
    SHARP           reduce using rule 11 (statement -> IDENTIFIER DEFINE_IND expression SEM .)
    CONFIG          reduce using rule 11 (statement -> IDENTIFIER DEFINE_IND expression SEM .)
    LPAREN          reduce using rule 11 (statement -> IDENTIFIER DEFINE_IND expression SEM .)
    NUMBER          reduce using rule 11 (statement -> IDENTIFIER DEFINE_IND expression SEM .)
    $end            reduce using rule 11 (statement -> IDENTIFIER DEFINE_IND expression SEM .)


state 70

    (34) expression -> IDENTIFIER LPAREN argslist RPAREN .

    COMMA           reduce using rule 34 (expression -> IDENTIFIER LPAREN argslist RPAREN .)
    LT              reduce using rule 34 (expression -> IDENTIFIER LPAREN argslist RPAREN .)
    GT              reduce using rule 34 (expression -> IDENTIFIER LPAREN argslist RPAREN .)
    EQ              reduce using rule 34 (expression -> IDENTIFIER LPAREN argslist RPAREN .)
    LTE             reduce using rule 34 (expression -> IDENTIFIER LPAREN argslist RPAREN .)
    GTE             reduce using rule 34 (expression -> IDENTIFIER LPAREN argslist RPAREN .)
    NEQ             reduce using rule 34 (expression -> IDENTIFIER LPAREN argslist RPAREN .)
    ADD             reduce using rule 34 (expression -> IDENTIFIER LPAREN argslist RPAREN .)
    SUB             reduce using rule 34 (expression -> IDENTIFIER LPAREN argslist RPAREN .)
    MUL             reduce using rule 34 (expression -> IDENTIFIER LPAREN argslist RPAREN .)
    DIV             reduce using rule 34 (expression -> IDENTIFIER LPAREN argslist RPAREN .)
    MOD             reduce using rule 34 (expression -> IDENTIFIER LPAREN argslist RPAREN .)
    AND             reduce using rule 34 (expression -> IDENTIFIER LPAREN argslist RPAREN .)
    OR              reduce using rule 34 (expression -> IDENTIFIER LPAREN argslist RPAREN .)
    RPAREN          reduce using rule 34 (expression -> IDENTIFIER LPAREN argslist RPAREN .)
    SEM             reduce using rule 34 (expression -> IDENTIFIER LPAREN argslist RPAREN .)


state 71

    (37) argslist -> argslist COMMA . expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 37

    expression                     shift and go to state 78

state 72

    (5) statement -> SHARP CALL LBRACKET IDENTIFIER . COMMA IDENTIFIER RBRACKET AS IDENTIFIER

    COMMA           shift and go to state 79


state 73

    (6) statement -> SHARP IMPORT LBRACKET IDENTIFIER . COMMA NUMBER COMMA IDENTIFIER RBRACKET AS IDENTIFIER

    COMMA           shift and go to state 80


state 74

    (7) statement -> SHARP WITH LBRACKET IDENTIFIER . RBRACKET AS IDENTIFIER

    RBRACKET        shift and go to state 81


state 75

    (12) statement -> expression COMMA tradecom SEM .

    IDENTIFIER      reduce using rule 12 (statement -> expression COMMA tradecom SEM .)
    SHARP           reduce using rule 12 (statement -> expression COMMA tradecom SEM .)
    CONFIG          reduce using rule 12 (statement -> expression COMMA tradecom SEM .)
    LPAREN          reduce using rule 12 (statement -> expression COMMA tradecom SEM .)
    NUMBER          reduce using rule 12 (statement -> expression COMMA tradecom SEM .)
    $end            reduce using rule 12 (statement -> expression COMMA tradecom SEM .)


state 76

    (33) tradecom -> TRADE LPAREN . argslist RPAREN
    (35) argslist -> .
    (36) argslist -> . expression
    (37) argslist -> . argslist COMMA expression
    (14) expression -> . expression LT expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression LTE expression
    (18) expression -> . expression GTE expression
    (19) expression -> . expression NEQ expression
    (20) expression -> . expression ADD expression
    (21) expression -> . expression SUB expression
    (22) expression -> . expression MUL expression
    (23) expression -> . expression DIV expression
    (24) expression -> . expression MOD expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . IDENTIFIER
    (30) expression -> . IDENTIFIER DOT IDENTIFIER
    (34) expression -> . IDENTIFIER LPAREN argslist RPAREN

    RPAREN          reduce using rule 35 (argslist -> .)
    COMMA           reduce using rule 35 (argslist -> .)
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 37

    argslist                       shift and go to state 82
    expression                     shift and go to state 45

state 77

    (4) statement -> IDENTIFIER LBRACKET NUMBER COMMA NUMBER . COMMA NUMBER RBRACKET

    COMMA           shift and go to state 83


state 78

    (37) argslist -> argslist COMMA expression .
    (14) expression -> expression . LT expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . LTE expression
    (18) expression -> expression . GTE expression
    (19) expression -> expression . NEQ expression
    (20) expression -> expression . ADD expression
    (21) expression -> expression . SUB expression
    (22) expression -> expression . MUL expression
    (23) expression -> expression . DIV expression
    (24) expression -> expression . MOD expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression

    RPAREN          reduce using rule 37 (argslist -> argslist COMMA expression .)
    COMMA           reduce using rule 37 (argslist -> argslist COMMA expression .)
    LT              shift and go to state 22
    GT              shift and go to state 23
    EQ              shift and go to state 24
    LTE             shift and go to state 25
    GTE             shift and go to state 26
    NEQ             shift and go to state 27
    ADD             shift and go to state 28
    SUB             shift and go to state 29
    MUL             shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    AND             shift and go to state 33
    OR              shift and go to state 34


state 79

    (5) statement -> SHARP CALL LBRACKET IDENTIFIER COMMA . IDENTIFIER RBRACKET AS IDENTIFIER

    IDENTIFIER      shift and go to state 84


state 80

    (6) statement -> SHARP IMPORT LBRACKET IDENTIFIER COMMA . NUMBER COMMA IDENTIFIER RBRACKET AS IDENTIFIER

    NUMBER          shift and go to state 85


state 81

    (7) statement -> SHARP WITH LBRACKET IDENTIFIER RBRACKET . AS IDENTIFIER

    AS              shift and go to state 86


state 82

    (33) tradecom -> TRADE LPAREN argslist . RPAREN
    (37) argslist -> argslist . COMMA expression

    RPAREN          shift and go to state 87
    COMMA           shift and go to state 71


state 83

    (4) statement -> IDENTIFIER LBRACKET NUMBER COMMA NUMBER COMMA . NUMBER RBRACKET

    NUMBER          shift and go to state 88


state 84

    (5) statement -> SHARP CALL LBRACKET IDENTIFIER COMMA IDENTIFIER . RBRACKET AS IDENTIFIER

    RBRACKET        shift and go to state 89


state 85

    (6) statement -> SHARP IMPORT LBRACKET IDENTIFIER COMMA NUMBER . COMMA IDENTIFIER RBRACKET AS IDENTIFIER

    COMMA           shift and go to state 90


state 86

    (7) statement -> SHARP WITH LBRACKET IDENTIFIER RBRACKET AS . IDENTIFIER

    IDENTIFIER      shift and go to state 91


state 87

    (33) tradecom -> TRADE LPAREN argslist RPAREN .

    SEM             reduce using rule 33 (tradecom -> TRADE LPAREN argslist RPAREN .)


state 88

    (4) statement -> IDENTIFIER LBRACKET NUMBER COMMA NUMBER COMMA NUMBER . RBRACKET

    RBRACKET        shift and go to state 92


state 89

    (5) statement -> SHARP CALL LBRACKET IDENTIFIER COMMA IDENTIFIER RBRACKET . AS IDENTIFIER

    AS              shift and go to state 93


state 90

    (6) statement -> SHARP IMPORT LBRACKET IDENTIFIER COMMA NUMBER COMMA . IDENTIFIER RBRACKET AS IDENTIFIER

    IDENTIFIER      shift and go to state 94


state 91

    (7) statement -> SHARP WITH LBRACKET IDENTIFIER RBRACKET AS IDENTIFIER .

    IDENTIFIER      reduce using rule 7 (statement -> SHARP WITH LBRACKET IDENTIFIER RBRACKET AS IDENTIFIER .)
    SHARP           reduce using rule 7 (statement -> SHARP WITH LBRACKET IDENTIFIER RBRACKET AS IDENTIFIER .)
    CONFIG          reduce using rule 7 (statement -> SHARP WITH LBRACKET IDENTIFIER RBRACKET AS IDENTIFIER .)
    LPAREN          reduce using rule 7 (statement -> SHARP WITH LBRACKET IDENTIFIER RBRACKET AS IDENTIFIER .)
    NUMBER          reduce using rule 7 (statement -> SHARP WITH LBRACKET IDENTIFIER RBRACKET AS IDENTIFIER .)
    $end            reduce using rule 7 (statement -> SHARP WITH LBRACKET IDENTIFIER RBRACKET AS IDENTIFIER .)


state 92

    (4) statement -> IDENTIFIER LBRACKET NUMBER COMMA NUMBER COMMA NUMBER RBRACKET .

    IDENTIFIER      reduce using rule 4 (statement -> IDENTIFIER LBRACKET NUMBER COMMA NUMBER COMMA NUMBER RBRACKET .)
    SHARP           reduce using rule 4 (statement -> IDENTIFIER LBRACKET NUMBER COMMA NUMBER COMMA NUMBER RBRACKET .)
    CONFIG          reduce using rule 4 (statement -> IDENTIFIER LBRACKET NUMBER COMMA NUMBER COMMA NUMBER RBRACKET .)
    LPAREN          reduce using rule 4 (statement -> IDENTIFIER LBRACKET NUMBER COMMA NUMBER COMMA NUMBER RBRACKET .)
    NUMBER          reduce using rule 4 (statement -> IDENTIFIER LBRACKET NUMBER COMMA NUMBER COMMA NUMBER RBRACKET .)
    $end            reduce using rule 4 (statement -> IDENTIFIER LBRACKET NUMBER COMMA NUMBER COMMA NUMBER RBRACKET .)


state 93

    (5) statement -> SHARP CALL LBRACKET IDENTIFIER COMMA IDENTIFIER RBRACKET AS . IDENTIFIER

    IDENTIFIER      shift and go to state 95


state 94

    (6) statement -> SHARP IMPORT LBRACKET IDENTIFIER COMMA NUMBER COMMA IDENTIFIER . RBRACKET AS IDENTIFIER

    RBRACKET        shift and go to state 96


state 95

    (5) statement -> SHARP CALL LBRACKET IDENTIFIER COMMA IDENTIFIER RBRACKET AS IDENTIFIER .

    IDENTIFIER      reduce using rule 5 (statement -> SHARP CALL LBRACKET IDENTIFIER COMMA IDENTIFIER RBRACKET AS IDENTIFIER .)
    SHARP           reduce using rule 5 (statement -> SHARP CALL LBRACKET IDENTIFIER COMMA IDENTIFIER RBRACKET AS IDENTIFIER .)
    CONFIG          reduce using rule 5 (statement -> SHARP CALL LBRACKET IDENTIFIER COMMA IDENTIFIER RBRACKET AS IDENTIFIER .)
    LPAREN          reduce using rule 5 (statement -> SHARP CALL LBRACKET IDENTIFIER COMMA IDENTIFIER RBRACKET AS IDENTIFIER .)
    NUMBER          reduce using rule 5 (statement -> SHARP CALL LBRACKET IDENTIFIER COMMA IDENTIFIER RBRACKET AS IDENTIFIER .)
    $end            reduce using rule 5 (statement -> SHARP CALL LBRACKET IDENTIFIER COMMA IDENTIFIER RBRACKET AS IDENTIFIER .)


state 96

    (6) statement -> SHARP IMPORT LBRACKET IDENTIFIER COMMA NUMBER COMMA IDENTIFIER RBRACKET . AS IDENTIFIER

    AS              shift and go to state 97


state 97

    (6) statement -> SHARP IMPORT LBRACKET IDENTIFIER COMMA NUMBER COMMA IDENTIFIER RBRACKET AS . IDENTIFIER

    IDENTIFIER      shift and go to state 98


state 98

    (6) statement -> SHARP IMPORT LBRACKET IDENTIFIER COMMA NUMBER COMMA IDENTIFIER RBRACKET AS IDENTIFIER .

    IDENTIFIER      reduce using rule 6 (statement -> SHARP IMPORT LBRACKET IDENTIFIER COMMA NUMBER COMMA IDENTIFIER RBRACKET AS IDENTIFIER .)
    SHARP           reduce using rule 6 (statement -> SHARP IMPORT LBRACKET IDENTIFIER COMMA NUMBER COMMA IDENTIFIER RBRACKET AS IDENTIFIER .)
    CONFIG          reduce using rule 6 (statement -> SHARP IMPORT LBRACKET IDENTIFIER COMMA NUMBER COMMA IDENTIFIER RBRACKET AS IDENTIFIER .)
    LPAREN          reduce using rule 6 (statement -> SHARP IMPORT LBRACKET IDENTIFIER COMMA NUMBER COMMA IDENTIFIER RBRACKET AS IDENTIFIER .)
    NUMBER          reduce using rule 6 (statement -> SHARP IMPORT LBRACKET IDENTIFIER COMMA NUMBER COMMA IDENTIFIER RBRACKET AS IDENTIFIER .)
    $end            reduce using rule 6 (statement -> SHARP IMPORT LBRACKET IDENTIFIER COMMA NUMBER COMMA IDENTIFIER RBRACKET AS IDENTIFIER .)

