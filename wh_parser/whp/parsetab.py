
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftANDORleftLTGTEQLTEGTENEQleftADDSUBleftMULDIVMODADD AND AS CALL COLON COMMA CONFIG DEFINE_ADD DEFINE_IND DEFINE_NO DIV DOT EQ GT GTE IDENTIFIER IMPORT LBRACKET LPAREN LT LTE MOD MUL NAMESTR NEQ NUMBER OR RBRACKET RPAREN SEM SHARP SUB TRADE WITHprogram : statementsstatements : statementstatements : statements statementstatement : IDENTIFIER LBRACKET NUMBER COMMA NUMBER COMMA NUMBER RBRACKETstatement : SHARP CALL LBRACKET IDENTIFIER COMMA IDENTIFIER RBRACKET AS IDENTIFIERstatement : SHARP IMPORT LBRACKET IDENTIFIER COMMA NUMBER COMMA IDENTIFIER RBRACKET AS IDENTIFIERstatement : SHARP WITH LBRACKET IDENTIFIER  RBRACKET AS IDENTIFIERstatement : IDENTIFIER COLON expression SEM\n                 | IDENTIFIER DEFINE_NO expression SEM\n                 | IDENTIFIER DEFINE_ADD expression SEM\n                 | IDENTIFIER DEFINE_IND expression SEM\n\n    statement : expression COMMA tradecom SEMstatement : CONFIG SEMexpression : expression LT  expression\n                  | expression GT  expression\n                  | expression EQ  expression\n                  | expression LTE expression\n                  | expression GTE expression\n                  | expression NEQ expression\n                  | expression ADD expression\n                  | expression SUB expression\n                  | expression MUL expression\n                  | expression DIV expression\n                  | expression MOD expression\n                  | expression AND expression\n                  | expression OR  expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : IDENTIFIERexpression : IDENTIFIER DOT IDENTIFIERtradecom :\n                | TRADE\n                | TRADE LPAREN argslist RPARENexpression : IDENTIFIER LPAREN argslist RPARENargslist :\n                | expression\n                | argslist COMMA expression'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,9,10,12,13,14,15,16,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,46,47,48,66,67,68,69,71,75,76,79,86,90,91,92,93,95,97,98,],[4,4,-2,37,-3,37,37,37,37,43,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-13,72,73,74,-8,-9,-10,-11,37,-12,37,84,91,94,-7,-4,95,-5,98,-6,]),'SHARP':([0,2,3,10,35,66,67,68,69,75,91,92,95,98,],[6,6,-2,-3,-13,-8,-9,-10,-11,-12,-7,-4,-5,-6,]),'CONFIG':([0,2,3,10,35,66,67,68,69,75,91,92,95,98,],[8,8,-2,-3,-13,-8,-9,-10,-11,-12,-7,-4,-5,-6,]),'LPAREN':([0,2,3,4,9,10,12,13,14,15,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,50,66,67,68,69,71,75,76,91,92,95,98,],[9,9,-2,17,9,-3,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-13,17,76,-8,-9,-10,-11,9,-12,9,-7,-4,-5,-6,]),'NUMBER':([0,2,3,9,10,11,12,13,14,15,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,65,66,67,68,69,71,75,76,80,83,91,92,95,98,],[5,5,-2,5,-3,38,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-13,77,-8,-9,-10,-11,5,-12,5,85,88,-7,-4,-5,-6,]),'$end':([1,2,3,10,35,66,67,68,69,75,91,92,95,98,],[0,-1,-2,-3,-13,-8,-9,-10,-11,-12,-7,-4,-5,-6,]),'LBRACKET':([4,18,19,20,],[11,46,47,48,]),'COLON':([4,],[12,]),'DEFINE_NO':([4,],[13,]),'DEFINE_ADD':([4,],[14,]),'DEFINE_IND':([4,],[15,]),'COMMA':([4,5,7,17,37,38,43,44,45,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,72,73,76,77,78,82,85,],[-29,-28,21,-35,-29,65,-30,71,-36,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-34,79,80,-35,83,-37,71,90,]),'LT':([4,5,7,36,37,39,40,41,42,43,45,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,78,],[-29,-28,22,22,-29,22,22,22,22,-30,22,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,22,22,-27,-34,22,]),'GT':([4,5,7,36,37,39,40,41,42,43,45,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,78,],[-29,-28,23,23,-29,23,23,23,23,-30,23,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,23,23,-27,-34,23,]),'EQ':([4,5,7,36,37,39,40,41,42,43,45,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,78,],[-29,-28,24,24,-29,24,24,24,24,-30,24,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,24,24,-27,-34,24,]),'LTE':([4,5,7,36,37,39,40,41,42,43,45,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,78,],[-29,-28,25,25,-29,25,25,25,25,-30,25,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,25,25,-27,-34,25,]),'GTE':([4,5,7,36,37,39,40,41,42,43,45,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,78,],[-29,-28,26,26,-29,26,26,26,26,-30,26,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,26,26,-27,-34,26,]),'NEQ':([4,5,7,36,37,39,40,41,42,43,45,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,78,],[-29,-28,27,27,-29,27,27,27,27,-30,27,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,27,27,-27,-34,27,]),'ADD':([4,5,7,36,37,39,40,41,42,43,45,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,78,],[-29,-28,28,28,-29,28,28,28,28,-30,28,28,28,28,28,28,28,-20,-21,-22,-23,-24,28,28,-27,-34,28,]),'SUB':([4,5,7,36,37,39,40,41,42,43,45,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,78,],[-29,-28,29,29,-29,29,29,29,29,-30,29,29,29,29,29,29,29,-20,-21,-22,-23,-24,29,29,-27,-34,29,]),'MUL':([4,5,7,36,37,39,40,41,42,43,45,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,78,],[-29,-28,30,30,-29,30,30,30,30,-30,30,30,30,30,30,30,30,30,30,-22,-23,-24,30,30,-27,-34,30,]),'DIV':([4,5,7,36,37,39,40,41,42,43,45,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,78,],[-29,-28,31,31,-29,31,31,31,31,-30,31,31,31,31,31,31,31,31,31,-22,-23,-24,31,31,-27,-34,31,]),'MOD':([4,5,7,36,37,39,40,41,42,43,45,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,78,],[-29,-28,32,32,-29,32,32,32,32,-30,32,32,32,32,32,32,32,32,32,-22,-23,-24,32,32,-27,-34,32,]),'AND':([4,5,7,36,37,39,40,41,42,43,45,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,78,],[-29,-28,33,33,-29,33,33,33,33,-30,33,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-34,33,]),'OR':([4,5,7,36,37,39,40,41,42,43,45,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,78,],[-29,-28,34,34,-29,34,34,34,34,-30,34,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-34,34,]),'DOT':([4,37,],[16,16,]),'RPAREN':([5,17,36,37,43,44,45,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,76,78,82,],[-28,-35,64,-29,-30,70,-36,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-34,-35,-37,87,]),'SEM':([5,8,21,37,39,40,41,42,43,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,87,],[-28,35,-31,-29,66,67,68,69,-30,75,-32,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-34,-33,]),'CALL':([6,],[18,]),'IMPORT':([6,],[19,]),'WITH':([6,],[20,]),'TRADE':([21,],[50,]),'RBRACKET':([74,84,88,94,],[81,89,92,96,]),'AS':([81,89,96,],[86,93,97,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,],[2,]),'statement':([0,2,],[3,10,]),'expression':([0,2,9,12,13,14,15,17,22,23,24,25,26,27,28,29,30,31,32,33,34,71,76,],[7,7,36,39,40,41,42,45,51,52,53,54,55,56,57,58,59,60,61,62,63,78,45,]),'argslist':([17,76,],[44,82,]),'tradecom':([21,],[49,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program_block','transfer.py',141),
  ('statements -> statement','statements',1,'p_statements_statement','transfer.py',145),
  ('statements -> statements statement','statements',2,'p_statements_statements','transfer.py',149),
  ('statement -> IDENTIFIER LBRACKET NUMBER COMMA NUMBER COMMA NUMBER RBRACKET','statement',8,'p_statement_paramdef','transfer.py',153),
  ('statement -> SHARP CALL LBRACKET IDENTIFIER COMMA IDENTIFIER RBRACKET AS IDENTIFIER','statement',9,'p_statement_call','transfer.py',158),
  ('statement -> SHARP IMPORT LBRACKET IDENTIFIER COMMA NUMBER COMMA IDENTIFIER RBRACKET AS IDENTIFIER','statement',11,'p_statement_import','transfer.py',163),
  ('statement -> SHARP WITH LBRACKET IDENTIFIER RBRACKET AS IDENTIFIER','statement',7,'p_statement_with','transfer.py',167),
  ('statement -> IDENTIFIER COLON expression SEM','statement',4,'p_statement_varassign','transfer.py',172),
  ('statement -> IDENTIFIER DEFINE_NO expression SEM','statement',4,'p_statement_varassign','transfer.py',173),
  ('statement -> IDENTIFIER DEFINE_ADD expression SEM','statement',4,'p_statement_varassign','transfer.py',174),
  ('statement -> IDENTIFIER DEFINE_IND expression SEM','statement',4,'p_statement_varassign','transfer.py',175),
  ('statement -> expression COMMA tradecom SEM','statement',4,'p_statement_condition','transfer.py',182),
  ('statement -> CONFIG SEM','statement',2,'p_statement_config','transfer.py',187),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','transfer.py',192),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','transfer.py',193),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','transfer.py',194),
  ('expression -> expression LTE expression','expression',3,'p_expression_binop','transfer.py',195),
  ('expression -> expression GTE expression','expression',3,'p_expression_binop','transfer.py',196),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binop','transfer.py',197),
  ('expression -> expression ADD expression','expression',3,'p_expression_binop','transfer.py',198),
  ('expression -> expression SUB expression','expression',3,'p_expression_binop','transfer.py',199),
  ('expression -> expression MUL expression','expression',3,'p_expression_binop','transfer.py',200),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','transfer.py',201),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','transfer.py',202),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','transfer.py',203),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','transfer.py',204),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','transfer.py',209),
  ('expression -> NUMBER','expression',1,'p_expression_number','transfer.py',214),
  ('expression -> IDENTIFIER','expression',1,'p_expression_id','transfer.py',219),
  ('expression -> IDENTIFIER DOT IDENTIFIER','expression',3,'p_expression_future','transfer.py',224),
  ('tradecom -> <empty>','tradecom',0,'p_tradecom_trade','transfer.py',229),
  ('tradecom -> TRADE','tradecom',1,'p_tradecom_trade','transfer.py',230),
  ('tradecom -> TRADE LPAREN argslist RPAREN','tradecom',4,'p_tradecom_trade','transfer.py',231),
  ('expression -> IDENTIFIER LPAREN argslist RPAREN','expression',4,'p_expression_methodcall','transfer.py',239),
  ('argslist -> <empty>','argslist',0,'p_argslist_arg','transfer.py',244),
  ('argslist -> expression','argslist',1,'p_argslist_arg','transfer.py',245),
  ('argslist -> argslist COMMA expression','argslist',3,'p_argslist_arg','transfer.py',246),
]
